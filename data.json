{
    "Db.config.ts": "require('dotenv').config({ path: '.env' });import { Sequelize} from 'sequelize';const Environments = {preproduction: process.env.PG_CONNECTION_ALPHA,production: process.env.PG_CONNECTION_PRODUCTION,testing: process.env.PG_CONNECTION_QA,development: process.env.PG_CONNECTION_DEVELOPMENT,local: process.env.PG_CONNECTION_LOCAL,supertest: process.env.PG_CONNECTION_SUPERTEST};const Default = process.env.PG_CONNECTION_DEVELOPMENT;const sequelize = new Sequelize(Environments[process.env.NODE_ENV] ?? Default,{logging: process.env.NODE_ENV.includes('local'),dialect: 'postgres'});(async () => {try {await sequelize.authenticate()return console.log('Database is running and ready to work.')} catch (error) {return console.log('Unable to connect database.')}})();export default sequelize;"
}